<tool id="gspan" name="fasta_to_gspan" version="0.1">
   <!--parallelism method="multi" split_inputs="input1" split_mode="to_size" split_size="10" shared_inputs="" merge_outputs="output1, output2"></parallelism-->
   
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <command>
<![CDATA[
	
	fasta2shrep_gspan.pl --fasta $input1
		
]]>


	</command>
    <inputs>
        <param type="data" name="input1" format="fasta" />
        
        
        
    </inputs>
    <outputs>
		<!--> stex konkret file em output anum, bayc irakanum ine liqe bz2-nera sarqum. es
		harce petqa qnnarkel u tesnel te vonc lucel <-->
        <data name="output1" format="bz2" from_work_dir="GSPAN/2.gspan.bz2" label = "gspan zip"  />
        
    </outputs>
    <tests>
        <test>
            <param name="input1" value="data.fasta"/>
            <output name="output1" file="1.group.gspan.bz2"/>
           
            
        </test>
    </tests>
    <help>
<![CDATA[


HELP:
            -help   brief help message
            -man    full documentation

COMPULSORY:
            -fasta  <STRING> e.g. "sequence.fasta"
                            All sequences in fasta format.

OPTIONS:
            -wins           [INTEGER] e.g. "50,100,200"
                            A list of window sizes to use.
                            If none are given (empty string ''), then the entire sequence is
                            taken with no windows. Each window > 1 required!
            -shift          <INTEGER> e.g. 20
                            The shift of the window, relative to the window size given in
                            percent. So you give which percent of the window size shall be
                            used for the shift. Of course the shift is rounded down to the
                            nearest whole number.
                            Example 20 % of a window 150 would result in a step size of 30 nt.
                            It is a relative parameter, as you can give different window sizes.
                            If you do not give this parameter there is a default shift of 1 nt.
            -cue            Crop unpaired ends.
                            If you give this flag, then the unpaired ends of each
                            single structure are ignored. E.g. the structure
                            ...(((...))).. becomes just (((...)))
            -stack          Adds stacking information to graphs. This adds an additional
                            vertex (type P) for each pair of stacked base-pairs and four edges
                            (type p) from each of the involved bases to the new vertex.
            -e              <FLOAT> e.g. 5.0
                            Energy range in kcal/mol (RNAshapes)
                            Use only one of -e and -c!
            -c              <INTEGER> e.g. 10
                            Relative energy range, i.e. percentage (%) of MFE energy (RNAshapes)
                            Use only one of -e and -c!
            -t              <INTEGER> [1-5] e.g. 3 OR "3=0,4=100,5=200"
                            The shape type (RNAshapes). Default is 3.
                            With the list format, the shape level can be changed for different window length
                            "4=100" means that shape level 4 is used from length 100nt (window length)
                            The first given length has to be 0! Not continuous given levels are allowed!
            -M              <INTEGER> e.g. 10
                            Max number of shreps that should be taken per window.
            -u              Ignore unstable structures (RNAshapes).
                            This option filters out closed structures with positive free energy.
            -r              Calculate structure probabilities for shreps (RNAshapes)
            -i              <INT> e.g. 10
                            Turn on structure sampling and gives number of sampling iterations.Default no sampling (i=0)                 
            -sample\-len    <INTEGER> e.g. 100. Only in sampling mode: Sampling is only used for seqs/windows >= given length.
                            Default: sample all lengths (0), if \-i > 0
            -q              Turn on shape probabilities for RNAshapes, no sampling mode allowed
            -Tp             <FLOAT> e.g 0.001. Filter cutoff for shape probabilities, applied before -M filter\!
            -seq\-graph\-win  add for each window a graph which contains no structure
            -seq\-graph\-t    add for each 't #' a graph which contains no structure
            -seq\-graph\-alph change the alphabet of unstructured graphs
            -annotate       <STRING> annotation.tab
                            A file with annotations to be added as abstract graphs
                            on the sequence leven (if given) and on the structure
                                            (SHREP) level. The format is has the following TAB-delimited
                                            columns: SEQID, START, END, NAMESPACE#LABEL.
                                            Labels with the same name-space and SEQID form connected
                                            components, which is a sequence of label vertices ordered
                                            by the START position in the sequence.
            -abstr                  Add abstract structure graphs to the single shrep graph
                                            instances.
            -nostr                  Calculate no structures, only add sequence information,
                                            if this is given, then -seq-graph-win AND/OR -seq-graph-t
                                            are required.
            -match\-shape    <SHAPE>
                    all seqs/windows will be constraint folded into that shape via 
                    RNAshapes (if structure is given in another way this struct will be kept), 
                    if this shape is not possible within given energy range, produce a 
                    specific t graph with only one vertex 'X'. By this the instance 
                    becomes very unsimilar to all other graphs (for knn)
            -vp     enable graph computation with viewpoints:
                    svmsgdnspdk will center on those nucleotides that are given
                    via capital letters and ignore those given as lowercase letters
            -tmp            <STRING> e.g. "/scratch/1/sita/tmp"
                            A directory for writing temporary files
            -o              <STRING> e.g. "ProjectX/MySequences/GSPAN/"
                            Output directory for gspan files containing graphs.
            -group          <INTEGER> e.g. 5
                            Combine/group that number of input seqs into 1 gspan file
                            output name is then '<INT>.group.gspan.bz2'
            -sge            Use SGE cluster for each sequence separately
            -sge\-logdir     stdout directory for SGE call
            -sge\-errdir     sdterr directory for SGE call
            -stdout         send graphs to stdout instead of writing to files
            -ignore\-header  don't write fasta id part after first space to gspan
            -debug          additional debug output


            DEFAULT VALUES
            -wins   ""
            -shift  1 nt
            -c              10
            -t              3
            -M              0 # selects all shreps
            -tmp    "/var/tmp/fasta2shrep"
            -o              "CURRENT_DIR/GSPAN/"

            SGE mode
            -sge\-logdir "CURRENT_DIR/GSPAN/SGE_log"
            -sge\-errdir "CURRENT_DIR/GSPAN/SGE_log"
            -task\-id <NUM>


    ]]></help>
    <citations>
        <citation type="bibtex">
@misc{githubseqtk,
  author = {LastTODO, FirstTODO},
  year = {TODO},
  
  
}</citation>
    </citations>
</tool>
